/* UTILITY MIXINS */

@use "sass:string";

@mixin outline-property-basis($type-of-var) {
  border: 2px solid var(--#{$type-of-var}-color);
  background: var(--bg-color);
  color: var(--#{$type-of-var}-color);
}

@mixin button-style($type-of-button) {
  $button-class: $type-of-button;

  @if ($type-of-button == "error") {
    $button-class: "danger";
  }

  &.ic-#{$button-class} {
    background: var(--#{$type-of-button}-color);
    color: var(--bg-color);

    &:hover {
      background: var(--#{$type-of-button}-extra-color);
    }

    &:active {
      background: var(--#{$type-of-button}-extra-color);
      opacity: 0.8;
    }
  }
}

@function arrow-icon-url($color) {
  $hex: if(string.index($color, "#") == 1, string.slice($color, 2), $color);
  $encoded-color: "%23" + $hex;
  $svg: "<svg viewBox='0 0 100 100' width='14' height='14' xmlns='http://www.w3.org/2000/svg'><path d='M10 30 L50 70 L90 30' stroke='" +
    $encoded-color + "' stroke-width='10' fill='none' stroke-linecap='round'/></svg>";
  $url: 'url("data:image/svg+xml,' + $svg + '")';

  @return unquote($url);
}
